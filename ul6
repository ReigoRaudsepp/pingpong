# Reigo Raudsepp
import random
import pygame

pygame.init()

lBlue = (51,249,255)

WINDOW_WIDTH = 640
WINDOW_HEIGHT = 480

window = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption("Reigo_Raudsepp")
clock = pygame.time.Clock()

pad_image = pygame.image.load('pad.png').convert_alpha()
ball_image = pygame.image.load('ball.png').convert_alpha()
pad_rect = pad_image.get_rect(center=(WINDOW_WIDTH / 2, WINDOW_HEIGHT - 100))
ball_rect = ball_image.get_rect(center=(WINDOW_WIDTH // 2, WINDOW_HEIGHT // 2))
ball_speed = [random.choice([-3, 3]), random.choice([-3, 3])]

score = 0
font = pygame.font.SysFont("consolas", 23)

pygame.mixer.music.load('MSCThemeSong.mp3')
pygame.mixer.music.play(-1)
pygame.mixer.music.set_volume(0.7)
hit_sound = pygame.mixer.Sound('Hit.wav')

def update_score():
    global score
    score += 2

def deduct_score():
    global score
    if score >= 0:
        score -= 1

def draw():
    global score
    window.blit(ball_image, ball_rect)
    score_text = font.render("Score: {}".format(score), True, (0, 0, 0))
    window.blit(score_text, (10, 10))
    window.blit(pad_image, pad_rect)

def game_loop():
    global running
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and pad_rect.left > 0:
            pad_rect.move_ip(-5, 0)
        if keys[pygame.K_RIGHT] and pad_rect.right < WINDOW_WIDTH:
            pad_rect.move_ip(5, 0)

        ball_rect.move_ip(ball_speed)
        if ball_rect.left < 0 or ball_rect.right > WINDOW_WIDTH:
            ball_speed[0] = -ball_speed[0]
            deduct_score()
            pygame.mixer.Sound.play(hit_sound)
        if ball_rect.top < 0:
            ball_speed[1] = -ball_speed[1]
            pygame.mixer.Sound.play(hit_sound)
        if ball_rect.bottom >= WINDOW_HEIGHT:
            running = False
            pygame.mixer.Sound.play(hit_sound)
        if ball_rect.colliderect(pad_rect):
            update_score()
            pygame.mixer.Sound.play(hit_sound)
            ball_speed[1] = -ball_speed[1]
        if ball_rect.colliderect(pad_rect) and ball_rect.bottom > pad_rect.bottom:
            ball_speed[1] = -ball_speed[1]

        window.fill(lBlue)
        draw()
        pygame.display.update()
        clock.tick(75)

    pygame.quit()

running = True
game_loop()
